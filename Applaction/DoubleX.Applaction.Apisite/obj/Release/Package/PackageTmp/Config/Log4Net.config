<?xml version="1.0" encoding="UTF-8"?>
<log4net>
  <!--<root>
    <level value="ALL" />
    <appender-ref ref="ServiceLog" />
    <appender-ref ref="ExceptionLog" />
  </root>-->
  <!--定义输出到文件中-->
  <logger name="ExceptionLog">
    <appender-ref ref="ExceptionAppender" />
  </logger>
  <appender name="ExceptionAppender" type="log4net.Appender.RollingFileAppender" Additivity="false">
    <!--定义文件存放位置-->
    <file value="Log/Exception/" />
    <!--是否追加到文件,默认为true，通常无需设置-->
    <appendToFile value="true" />
    <!---日志文件划分类型 Date 按时间,Size 按大小-->
    <RollingStyle value="Date" />
    <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
    <DatePattern value="yyyyMMdd&quot;.log&quot;" />
    <!--单个文件最大数量 好像只有在 按Size分割时有效-->
    <param name="MaximumFileSize" value="2000KB" />
    <!--日志文件名是否为静态-->
    <StaticLogFileName value="false" />
    <!--多线程时采用最小锁定-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <!--布局（向用户显示最后经过格式化的输出信息）-->
    <layout type="log4net.Layout.PatternLayout">
      <!--
                       %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
                       %n(new line):换行 
                       %d(datetime):输出当前语句运行的时刻 
                       %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
                       %t(thread id):当前语句所在的线程ID 
                       %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
                       %c(class):当前日志对象的名称，例如：
                       %L：输出语句所在的行号 
                       %F：输出语句所在的文件名 
                       %-数字：表示该项的最小长度，如果不够，则用空格填充
                       -->
      <!--正文-->
      <!--<Header value="[Header]&#xD;&#xA;" />
      <Footer value="[Footer]&#xD;&#xA;" />-->
      <ConversionPattern value="%newline------Start------%n%newline  时间：%date   线程ID:[%thread]   日志级别：%-5level  %newline  %message  %newline %n-------End-------%n" />
    </layout>
  </appender>
  
  <logger name="ServiceLog">
    <appender-ref ref="ServiceAppender" />
  </logger>
  <appender name="ServiceAppender" type="log4net.Appender.RollingFileAppender" Additivity="false">
    <!--定义文件存放位置以'/'结束-->
    <file value="Log/Service/" />
    <!--是否追加到文件,默认为true，通常无需设置-->
    <appendToFile value="true" />
    <!---日志文件划分类型 Date 按时间,Size 按大小-->
    <RollingStyle value="Date" />
    <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
    <DatePattern value="yyyyMMdd&quot;.log&quot;" />
    <!--单个文件最大数量 好像只有在 按Size分割时有效-->
    <param name="MaximumFileSize" value="2000KB" />
    <!--日志文件名是否为静态-->
    <StaticLogFileName value="false" />
    <!--多线程时采用最小锁定-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <!--布局（向用户显示最后经过格式化的输出信息）-->
    <layout type="log4net.Layout.PatternLayout">
      <!--
                       %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
                       %n(new line):换行 
                       %d(datetime):输出当前语句运行的时刻 
                       %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
                       %t(thread id):当前语句所在的线程ID 
                       %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
                       %c(class):当前日志对象的名称，例如：
                       %L：输出语句所在的行号 
                       %F：输出语句所在的文件名 
                       %-数字：表示该项的最小长度，如果不够，则用空格填充
                       -->
      <!--正文-->
      <!--<Header value="[Header]&#xD;&#xA;" />
      <Footer value="[Footer]&#xD;&#xA;" />-->
      <ConversionPattern value="%newline------Start------%n%newline  时间：%date   线程ID:[%thread]   日志级别：%-5level  %newline  %message  %newline %n-------End-------%n" />
    </layout>
  </appender>
  
  <logger name="ApiLog">
    <appender-ref ref="ApiAppender" />
  </logger>
  <appender name="ApiAppender" type="log4net.Appender.RollingFileAppender" Additivity="false">
    <!--定义文件存放位置-->
    <file value="Log/Api/" />
    <!--是否追加到文件,默认为true，通常无需设置-->
    <appendToFile value="true" />
    <!---日志文件划分类型 Date 按时间,Size 按大小-->
    <RollingStyle value="Date" />
    <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
    <DatePattern value="yyyyMMdd&quot;.log&quot;" />
    <!--单个文件最大数量 好像只有在 按Size分割时有效-->
    <param name="MaximumFileSize" value="2000KB" />
    <!--日志文件名是否为静态-->
    <StaticLogFileName value="false" />
    <!--多线程时采用最小锁定-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <!--布局（向用户显示最后经过格式化的输出信息）-->
    <layout type="log4net.Layout.PatternLayout">
      <!--
                       %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
                       %n(new line):换行 
                       %d(datetime):输出当前语句运行的时刻 
                       %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
                       %t(thread id):当前语句所在的线程ID 
                       %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
                       %c(class):当前日志对象的名称，例如：
                       %L：输出语句所在的行号 
                       %F：输出语句所在的文件名 
                       %-数字：表示该项的最小长度，如果不够，则用空格填充
                       -->
      <!--正文-->
      <!--<Header value="[Header]&#xD;&#xA;" />
      <Footer value="[Footer]&#xD;&#xA;" />-->
      <ConversionPattern value="%newline------Start------%n%newline  时间：%date   线程ID:[%thread]   日志级别：%-5level  %newline  %message  %newline %n-------End-------%n" />
    </layout>
  </appender>

  <logger name="PayNotificationLog">
    <appender-ref ref="PayNotificationAppender" />
  </logger>
  <appender name="PayNotificationAppender" type="log4net.Appender.RollingFileAppender" Additivity="false">
    <!--定义文件存放位置-->
    <file value="Log/PayNotification/" />
    <!--是否追加到文件,默认为true，通常无需设置-->
    <appendToFile value="true" />
    <!---日志文件划分类型 Date 按时间,Size 按大小-->
    <RollingStyle value="Date" />
    <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
    <DatePattern value="yyyyMMdd&quot;.log&quot;" />
    <!--单个文件最大数量 好像只有在 按Size分割时有效-->
    <param name="MaximumFileSize" value="2000KB" />
    <!--日志文件名是否为静态-->
    <StaticLogFileName value="false" />
    <!--多线程时采用最小锁定-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <!--布局（向用户显示最后经过格式化的输出信息）-->
    <layout type="log4net.Layout.PatternLayout">
      <!--
                       %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
                       %n(new line):换行 
                       %d(datetime):输出当前语句运行的时刻 
                       %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
                       %t(thread id):当前语句所在的线程ID 
                       %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
                       %c(class):当前日志对象的名称，例如：
                       %L：输出语句所在的行号 
                       %F：输出语句所在的文件名 
                       %-数字：表示该项的最小长度，如果不够，则用空格填充
                       -->
      <!--正文-->
      <!--<Header value="[Header]&#xD;&#xA;" />
      <Footer value="[Footer]&#xD;&#xA;" />-->
      <ConversionPattern value="%newline------Start------%n%newline  时间：%date   线程ID:[%thread]   日志级别：%-5level  %newline  %message  %newline %n-------End-------%n" />
    </layout>
  </appender>

  <logger name="PaySubmitLog">
    <appender-ref ref="PaySubmitAppender" />
  </logger>
  <appender name="PaySubmitAppender" type="log4net.Appender.RollingFileAppender" Additivity="false">
    <!--定义文件存放位置-->
    <file value="Log/PaySubmit/" />
    <!--是否追加到文件,默认为true，通常无需设置-->
    <appendToFile value="true" />
    <!---日志文件划分类型 Date 按时间,Size 按大小-->
    <RollingStyle value="Date" />
    <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
    <DatePattern value="yyyyMMdd&quot;.log&quot;" />
    <!--单个文件最大数量 好像只有在 按Size分割时有效-->
    <param name="MaximumFileSize" value="2000KB" />
    <!--日志文件名是否为静态-->
    <StaticLogFileName value="false" />
    <!--多线程时采用最小锁定-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <!--布局（向用户显示最后经过格式化的输出信息）-->
    <layout type="log4net.Layout.PatternLayout">
      <!--
                       %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
                       %n(new line):换行 
                       %d(datetime):输出当前语句运行的时刻 
                       %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
                       %t(thread id):当前语句所在的线程ID 
                       %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
                       %c(class):当前日志对象的名称，例如：
                       %L：输出语句所在的行号 
                       %F：输出语句所在的文件名 
                       %-数字：表示该项的最小长度，如果不够，则用空格填充
                       -->
      <!--正文-->
      <!--<Header value="[Header]&#xD;&#xA;" />
      <Footer value="[Footer]&#xD;&#xA;" />-->
      <ConversionPattern value="%newline------Start------%n%newline  时间：%date   线程ID:[%thread]   日志级别：%-5level  %newline  %message  %newline %n-------End-------%n" />
    </layout>
  </appender>
</log4net>